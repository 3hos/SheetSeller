@model SheetSeller.Models.DTO.SheetList
@inject SheetSeller.Repositories.Abstract.ISheetService sheetService
@{
    var tags = sheetService.GetTags();
}
@using (Html.BeginForm("Index", "Home", FormMethod.Get))
{
    <section class="m04 sides" style="flex-wrap:wrap;">
        <div class="inp">
            @Html.TextBox("term", Model.Term, new { @class = "fill-w", placeholder = "search here" })
            <button type="submit">
                <i class="fas fa-search"></i>
            </button>
        </div>
        <div class="tag" style="max-width: 27%;" >
            <h4>#</h4>
            @Html.TextBox("tag", Model.Tag, new { @class = "input-tag", maxlength = "10", list = "tag-list", placeholder = "tag"})
            <datalist id="tag-list">
                @foreach (var tag in tags)
                {
                    <option value="@tag.Name" data="@tag.Tagged">@tag.Tagged</option>
                }
            </datalist>
        </div>
        @Html.DropDownList("sorting", Model.selectListItems, new { @class = "tag", onchange="this.form.submit()" })
    </section>
}
<section class="grd">
    @foreach (var sheet in Model.Sheets)
    {
        @await Html.PartialAsync("Sheet_Partial", sheet)
    }
</section>
<div>
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        if (i == Model.CurrentPage)
        {
            @Html.ActionLink(i.ToString(), "Index", "Home", new { currentPage = i, term = Model.Term }, new { @class = "active" })
        }
        else
        {
            @Html.ActionLink(i.ToString(), "Index", "Home", new { currentPage = i, term = Model.Term })
        }
    }
</div>